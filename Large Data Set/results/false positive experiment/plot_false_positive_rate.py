import matplotlib.pyplot as plt
#plt.plot([0], 'w', label = 'hash function type, m/n')
#plt.plot([1,2,3,4], [0.008344811, 0.025179204, 0.061408523, 0.15261763], 'r--', label ='deterministic, 4') #4, det
#plt.plot([1,2,3,4], [0.0082831085, 0.025069645, 0.06139941, 0.15332411], 'b--', label ='random, 4') #4, ran
#plt.plot([1,2,3,4], [1.8240287E-5, 2.7497832E-4, 0.002406159, 0.021114284], 'r', label ='deterministic, 8') #8, det
#plt.plot([1,2,3,4], [1.8221517E-5, 2.748098E-4, 0.0024082577, 0.021195047], 'b', label ='random, 8') #8, ran
#plt.plot([1,2,3,4], [1.7246738E-6, 4.546654E-5, 6.077706E-4, 0.008424745], 'r-.', label ='deterministic, 10') #10, det
#plt.plot([1,2,3,4], [1.4997155E-6, 4.2323387E-5, 5.8826845E-4, 0.008196562], 'b-.', label ='random, 10') #10, ran
#plt.plot([0], 'w', label = 'theoretical prediction')
#plt.plot([1,2,3,4], [0.155, 0.155, 0.155, 0.155], 'g:', label = 'm/n = 4, k =2')
#plt.plot([1,2,3,4], [0.0217, 0.0217, 0.0217, 0.0217], 'c:', label = 'm/n = 8, k = 5')
#plt.plot([1,2,3,4], [0.00844, 0.00844, 0.00844, 0.00844], 'm:', label = 'm/n = 10, k = 6')
#plt.axis([1, 4, 0, 0.16])
#plt.xticks([1,2,3,4], ['50K', '100K', '200K', '235886'])
#plt.ylabel('false positive rate')
#plt.xlabel('data size (element count)')
#plt.legend(loc = "upper left")
#plt.show()


#plt.plot([0], 'w', label = 'hash function type, m/n')
#plt.plot([9.095524758251873, 15.827538050689741, 24.764146796545756, 39.09759375291468], [0.008328071, 0.025174195, 0.06147296, 0.15261741], 'r--', label ='deterministic, 4') #4, det
#plt.plot([9.097573291032852, 15.834091935177891, 24.78237773523238, 39.149601326667906], [0.00829744, 0.025081193, 0.061418034, 0.15333778], 'b--', label ='random, 4') #4, ran
#plt.plot([11.239057379677043, 19.38283237188727, 29.94620666868738, 46.23838421949726], [1.7707047E-5, 2.7537555E-4, 0.0024155744, 0.021114264], 'r', label ='deterministic, 8') #8, det
#plt.plot([11.239672596605034, 19.385172568519494, 29.952305492951815, 46.25837476173651], [1.7756254E-5, 2.736121E-4, 0.0024175006, 0.021183772], 'b', label ='random, 8') #8, ran
#plt.plot([10.815743833885863, 18.688691677335658, 28.950662157779654, 44.916527475136526], [1.5664982E-6, 4.450182E-5, 6.126153E-4, 0.008424741], 'r-.', label ='deterministic, 10') #10, det
#plt.plot([10.815311957766344, 18.686722670363878, 28.946004497055117, 44.906792140921205], [1.6239094E-6, 4.373908E-5, 5.8571476E-4,0.008198865], 'b-.', label ='random, 10') #10, ran
#plt.axis([11, 39, 0, 0.16])
#plt.xlabel('full ratio (%)')
#plt.ylabel('false positive rate')
#plt.legend(loc = "upper left")
#plt.show()


plt.plot([0], 'w', label = 'filter-building time')
plt.plot([1,2,3,4], [0.269914375, 0.5423675, 1.07996125, 1.243578125], 'r--', label ='deterministic, 4') #4, det
plt.plot([1,2,3,4], [0.028388125, 0.056140625, 0.112225625, 0.13030937499999998], 'b--', label ='random, 4') #4, ran
plt.plot([1,2,3,4], [0.34550875000000003, 0.6854612499999999, 1.37495125, 1.5745137500000002], 'r', label ='deterministic, 8') #8, det
plt.plot([1,2,3,4], [0.061025625, 0.121484375, 0.24260749999999998, 0.28037124999999996], 'b', label ='random, 8') #8, ran
plt.plot([1,2,3,4], [0.369269375, 0.737438125, 1.469929375, 1.6885225], 'r-.', label ='deterministic, 10') #10, det
plt.plot([1,2,3,4], [0.0737525, 0.145764375, 0.290220625, 0.33695125000000004], 'b-.', label ='random, 10') #10, ran
plt.plot([0], 'w', label = 'querying time')
plt.plot([1,2,3,4], [0.441125625, 0.44201125, 0.445425, 0.45071], 'c--', label ='deterministic, 4') #4, det
plt.plot([1,2,3,4], [0.0335775, 0.03475875, 0.036634375, 0.04014375], 'm--', label ='random, 4') #4, ran
plt.plot([1,2,3,4], [0.44420125, 0.448314375, 0.45477187500000005, 0.47030312500000004], 'c', label ='deterministic, 8') #8, det
plt.plot([1,2,3,4], [0.03591375, 0.03810125, 0.042358125, 0.050275625], 'm', label ='random, 8') #8, ran
plt.plot([1,2,3,4], [0.445120625, 0.447864375, 0.45612437499999997, 0.4698625], 'c-.', label ='deterministic, 10') #10, det
plt.plot([1,2,3,4], [0.03636625, 0.03841, 0.04210125, 0.050603125], 'm-.', label ='random, 10') #10, ran
plt.axis([1, 4, 0, 1.7])
plt.xticks([1,2,3,4], ['50K', '100K', '200K', '235886'])
plt.xlabel('data size (element count)')
plt.ylabel('time (seconds)')
plt.legend(loc = "upper left")
plt.show()
